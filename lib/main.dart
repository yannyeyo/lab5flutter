import 'package:flutter/material.dart';
import '/models/item.dart';
import 'screens/list_screen.dart';
import 'screens/add_form_screen.dart';

void main() {
  runApp(const ShoppingApp());
}

class ShoppingApp extends StatefulWidget {
  const ShoppingApp({super.key});

  @override
  State<ShoppingApp> createState() => _ShoppingAppState();
}

class _ShoppingAppState extends State<ShoppingApp> {
  // –°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫ (–æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è)
  List<Item> _items = [];

  // –ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º —Ç–µ–∫—É—â–∏–π —ç–∫—Ä–∞–Ω
  bool _isAdding = false;

  // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –ø–æ–∑–∏—Ü–∏–∏
  void _addItem(String title, String? note) {
    setState(() {
      final newItem = Item(
        title: title,
        note: note,
        createdAt: DateTime.now(),
      );
      _items.add(newItem);
      _isAdding = false; // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ —ç–∫—Ä–∞–Ω —Å–ø–∏—Å–∫–∞
    });
  }

  // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è "–∫—É–ø–ª–µ–Ω–æ"
  // üü¢ –æ–±–Ω–æ–≤–ª—ë–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞: –∫—É–ø–ª–µ–Ω–Ω—ã–µ ‚Äî –≤–Ω–∏–∑, –Ω–µ–∫—É–ø–ª–µ–Ω–Ω—ã–µ ‚Äî –≤–≤–µ—Ä—Ö
  void _toggleItem(String id) {
    setState(() {
      final index = _items.indexWhere((i) => i.id == id);
      if (index != -1) {
        final item = _items[index];
        final updated = item.copyWith(isBought: !item.isBought);

        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ
        _items.removeAt(index);

        if (updated.isBought) {
          // –ü–µ—Ä–µ–º–µ—â–∞–µ–º –∫—É–ø–ª–µ–Ω–Ω—ã–µ –≤ –∫–æ–Ω–µ—Ü
          _items.add(updated);
        } else {
          // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–µ–∫—É–ø–ª–µ–Ω–Ω—ã–µ –≤ –Ω–∞—á–∞–ª–æ
          _items.insert(0, updated);
        }
      }
    });
  }

  // –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏
  void _deleteItem(String id) {
    setState(() {
      _items.removeWhere((i) => i.id == id);
    });
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Shopping List',
      debugShowCheckedModeBanner: false,
      theme: ThemeData(primarySwatch: Colors.teal),
      home: _isAdding
          ? AddFormScreen(
        onSave: _addItem,
        onCancel: () => setState(() => _isAdding = false),
      )
          : ListScreen(
        items: _items,
        onAddPressed: () => setState(() => _isAdding = true),
        onToggle: _toggleItem,
        onDelete: _deleteItem,
      ),
    );
  }
}
